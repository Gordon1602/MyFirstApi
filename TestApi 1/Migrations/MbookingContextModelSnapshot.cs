// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestApi_1.Models;

#nullable disable

namespace TestApi_1.Migrations
{
    [DbContext(typeof(MbookingContext))]
    partial class MbookingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestApi_1.Models.BookingTabel", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Booking_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<string>("BookingDate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Booking_Date");

                    b.Property<string>("BookingNotes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Booking_Notes");

                    b.Property<TimeSpan?>("BookingTime")
                        .HasPrecision(5)
                        .HasColumnType("time(5)")
                        .HasColumnName("Booking_Time");

                    b.Property<string>("ClientName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Client_Name");

                    b.Property<string>("ClietnCar")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Clietn_Car");

                    b.Property<string>("VehicleMake")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Vehicle_Make");

                    b.HasKey("BookingId");

                    b.ToTable("Booking_Tabel", (string)null);
                });

            modelBuilder.Entity("TestApi_1.Models.ClientTable", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Client_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<string>("ClientName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Client_Name");

                    b.Property<string>("ClientPhoneNumde")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Client_PhoneNumde");

                    b.Property<string>("ClientSurename")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Client_Surename");

                    b.HasKey("ClientId");

                    b.ToTable("Client_table", (string)null);
                });

            modelBuilder.Entity("TestApi_1.Models.ClientVehicle", b =>
                {
                    b.Property<int>("ClientVehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Client_Vehicle_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientVehicleId"));

                    b.Property<string>("VehicleMake")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Vehicle_Make");

                    b.Property<string>("VehicleModel")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Vehicle_Model");

                    b.Property<string>("VehicleRegistration")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Vehicle_Registration");

                    b.HasKey("ClientVehicleId");

                    b.ToTable("Client_Vehicle", (string)null);
                });

            modelBuilder.Entity("TestApi_1.Models.Login", b =>
                {
                    b.Property<int>("LoginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Login_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoginId"));

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("LoginId");

                    b.ToTable("login", (string)null);
                });

            modelBuilder.Entity("TestApi_1.Models.NewClietVehicleView", b =>
                {
                    b.Property<string>("ClientName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName(" Client Name");

                    b.Property<string>("ClientPhoneNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Client Phone Number");

                    b.Property<string>("ClientSurename")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Client Surename");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(101)
                        .IsUnicode(false)
                        .HasColumnType("varchar(101)");

                    b.Property<string>("LicenseNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("License Number");

                    b.ToTable((string)null);

                    b.ToView("NewClietVehicleView", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
